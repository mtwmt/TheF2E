@import url("//fonts.googleapis.com/css?family=Roboto:300,400,500,700");
/* http://meyerweb.com/eric/tools/css/reset/  v2.0 | 20110126 License: none (public domain) */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote:before, blockquote:after, q:before, q:after { content: ''; content: none; }

table { border-collapse: collapse; border-spacing: 0; }

body, html { position: relative; -webkit-text-size-adjust: 100%; font-family: "Roboto","Microsoft JhengHei", "Apple LiGothic Medium", "sans-serif", "serif"; background: #E1E1E1; }

html { font-size: 16px; }

a { text-decoration: none; display: block; transition: .3s; }

a:hover { text-decoration: none; opacity: 0.7; }

a[href^=tel] { display: inline-block; }

input { -webkit-appearance: none; }

input:focus { outline: none; }

@media (min-width: 320px), (max-width: 320px) { html { font-size: 12px; } }

@media (min-width: 360px) { html { font-size: 13.5px; } }

@media (min-width: 400px) { html { font-size: 15px; } }

@media (min-width: 640px) { html { font-size: 16px; } }

nav { height: 4.75rem; line-height: 4.75rem; background: #4A90E2; }

nav ul { padding: 0 0; max-width: 38.75rem; margin-left: auto; margin-right: auto; display: flex; justify-content: space-between; }

nav ul > li { position: relative; width: 10rem; text-align: center; font-size: 1.5rem; font-family: 'Roboto'; }

nav ul > li a { color: #00408B; }

nav ul > li.is-active a, nav ul > li:hover a { color: #fff; }

nav ul > li.is-active a:after, nav ul > li:hover a:after { content: ''; position: absolute; left: 0; bottom: 0; width: 100%; height: 0.3125rem; background: #00408B; }

.content { margin-top: 1.5rem; margin-bottom: 3rem; padding: 0 0; max-width: 38.75rem; margin-left: auto; margin-right: auto; }

.content * { box-sizing: border-box; }

[data='checkbox-check'] { position: relative; display: inline-block; line-height: 1.5rem; }

[data='checkbox-check'] input[type="checkbox"] ~ label { padding-left: 1.5rem; }

[data='checkbox-check'] input[type="checkbox"] ~ label:before { content: ''; position: absolute; z-index: 1; top: 0.375rem; left: 0.375rem; width: 0.75rem; height: 0.375rem; border: 0.125rem solid #191919; border-top-style: none; border-right-style: none; vertical-align: top; transition: -webkit-transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); transition: transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); transition: transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75), -webkit-transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); -webkit-transform: rotate(-45deg) scale(0, 0); transform: rotate(-45deg) scale(0, 0); }

[data='checkbox-check'] input[type="checkbox"] ~ label:after { vertical-align: top; content: ''; position: absolute; z-index: 0; top: 0; left: 0px; width: 1.5rem; height: 1.5rem; background: #fff; cursor: pointer; }

[data='checkbox-check'] input[type="checkbox"]:checked ~ label:before { -webkit-transform: rotate(-45deg) scale(1, 1); transform: rotate(-45deg) scale(1, 1); border-color: #fff; }

[data='checkbox-check'] input[type="checkbox"]:checked ~ label:after { background: #4A90E2; }

.m-addtask { transition: .5s; position: relative; margin-bottom: 1.5rem; height: 4rem; }

.m-addtask.is-active { height: 31.25rem; }

.m-addtask.is-active .addinner { max-height: 31.25rem; -webkit-transform: scale(1, 1); transform: scale(1, 1); }

.m-addtask .add { padding: 0 1.875rem; border-radius: 0.25rem; height: 4rem; line-height: 4rem; font-size: 1.5rem; border: 0.125rem solid #C8C8C8; color: #C8C8C8; background: #fff; }

.m-addtask .addinner { position: absolute; top: 0; left: 0; width: 100%; max-height: 0; -webkit-transform: scale(1, 0); transform: scale(1, 0); }

[data='check-file'] { display: flex; }

[data='check-file'] .fileinfo { margin-right: 1.5rem; font-family: 'Roboto'; line-height: 1.25rem; }

[data='check-file'] .fileinfo .date { color: #757575; }

[data='check-file'] input { display: none; }

[data='check-file'] label { align-self: center; transition: .3s; position: relative; border-radius: 0.125rem; display: block; width: 2rem; height: 2rem; background: #c8c8c8; cursor: pointer; }

[data='check-file'] label:hover { background: #4A90E2; }

[data='check-file'] label:before, [data='check-file'] label:after { content: ""; position: absolute; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 0.75rem; height: 0.125rem; background: #fff; }

[data='check-file'] label:after { -webkit-transform: translate(-50%, -50%) rotate(90deg); transform: translate(-50%, -50%) rotate(90deg); }

.m-task-item { border-radius: 0.25rem; margin-bottom: 0.5rem; height: 6.375rem; transition: .5s; }

.m-task-item.topic .m-task-label { background: #FFF2DC; }

.m-task-item.topic .m-task-label .edit .fa-star { color: #F5A623; }

.m-task-item.is-edit { box-shadow: 0px 4px 10px #c8c8c8; margin-bottom: 1rem; height: 29.875rem; }

.m-task-item.is-edit .m-task-label { border-radius: 0.25rem 0.25rem 0 0; height: 4.75rem; }

.m-task-item.is-edit .m-task-label .state { display: none; }

.m-task-item.is-edit .m-task-label .group, .m-task-item.is-edit .m-task-label .info, .m-task-item.is-edit .m-task-label .edit { align-self: center; }

.m-task-item.is-edit .m-task-label .fa-edit { color: #4a90e2; }

.m-task-item.is-edit .m-task-event { -webkit-transform: scale(1, 1); transform: scale(1, 1); }

.m-task-item.is-del .m-task-label { height: 4.75rem; }

.m-task-item.is-del .group, .m-task-item.is-del .info, .m-task-item.is-del .edit { align-self: center; }

.m-task-item.is-del h4 { color: #9B9B9B; text-decoration: line-through; }

.m-task-item.is-del .state { display: none; }

.m-task-label { border-radius: 0.25rem; height: 6.375rem; padding: 1.25rem 1.875rem; background-color: #f2f2f2; display: flex; justify-content: space-between; }

.m-task-label .group { flex: 0 0 atuo; width: 2.25rem; }

.m-task-label .info { display: flex; flex-wrap: wrap; align-content: space-between; flex: 1 1 0; }

.m-task-label .info input[type='text'] { border: 0px; font-size: 1.5rem; font-family: 'Roboto'; font-weight: 500; line-height: 1.25rem; background: transparent; }

.m-task-label .info input[type='text']::-webkit-input-placeholder { color: #000; }

.m-task-label .info input[type='text']:-ms-input-placeholder { color: #000; }

.m-task-label .info input[type='text']::-ms-input-placeholder { color: #000; }

.m-task-label .info input[type='text']::placeholder { color: #000; }

.m-task-label .info h4 { width: 100%; font-size: 1.5rem; font-family: 'Roboto'; font-weight: 500; line-height: 1.25rem; }

.m-task-label .info .state > span { display: inline-block; color: #757575; margin-right: 1rem; }

.m-task-label .info .state > span > em { margin-left: 0.5rem; }

.m-task-label .edit { flex: 0 0 atuo; font-size: 1.5rem; }

.m-task-label .edit i { display: inline-block; margin-left: 1.25rem; }

.m-task-event { position: relative; border-radius: 0 0 0.25rem 0.25rem; border-top: 0.125rem solid #c8c8c8; max-height: 0; transition: .5s; -webkit-transform: scale(1, 0); transform: scale(1, 0); -webkit-transform-origin: top; transform-origin: top; }

.m-task-event .m-task-block { padding: 1.25rem 4.375rem 0.5rem 4.375rem; background: #F2F2F2; }

.m-task-event .m-task-block > div { margin-bottom: 1rem; }

.m-task-event .tit { font-size: 1.25rem; font-weight: 500; margin-bottom: 0.5rem; }

.m-task-event .tit i { display: inline-block; width: 1.25rem; }

.m-task-event .cont { padding-left: 1.5rem; }

.m-task-event textarea { resize: none; font-family: 'Roboto'; padding: 0.5rem 1rem; line-height: 1.5rem; font-size: 1rem; border: 0px; width: 100%; height: 7.5rem; }

.m-task-event .btns { text-align: center; display: flex; }

.m-task-event .btns i { display: inline-block; margin-right: 0.5rem; }

.m-task-event .btns a { position: relative; display: block; width: 50%; font-size: 1.5rem; line-height: 3.75rem; }

.m-task-event .btns a.cancel { border-radius: 0 0 0 0.25rem; color: #D0021B; background: #fff; }

.m-task-event .btns a.cancel:hover { background: #fdfdfd; }

.m-task-event .btns a.save { border-radius: 0 0 0.25rem 0; color: #fff; background: #4A90E2; }

.m-task-event .btns a.save:hover { background: #3982d7; }

.total { padding-left: 1.875rem; font-size: 1.5rem; color: #c8c8c8; font-style: italic; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
