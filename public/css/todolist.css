/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
@import url(//fonts.googleapis.com/css?family=Roboto:400,500);
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote:before, blockquote:after, q:before, q:after { content: ''; content: none; }

table { border-collapse: collapse; border-spacing: 0; }

body, html { position: relative; -webkit-text-size-adjust: 100%; font-family: "Microsoft JhengHei", "Apple LiGothic Medium", "sans-serif", "serif"; }

html { font-size: 16px; }

a { text-decoration: none; display: block; transition: .3s; }

a:hover { color: #fff; text-decoration: none; opacity: 0.7; }

a[href^=tel] { display: inline-block; }

input { -webkit-appearance: none; }

input:focus { outline: none; }

[data='checkbox-check'] { position: relative; display: inline-block; line-height: 1.5rem; }

[data='checkbox-check'] input[type="checkbox"] ~ label:before { content: ''; position: absolute; z-index: 1; top: 0.375rem; left: 0.375rem; width: 0.75rem; height: 0.375rem; border: 0.125rem solid #191919; border-top-style: none; border-right-style: none; vertical-align: top; transition: -webkit-transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); transition: transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); transition: transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75), -webkit-transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); -webkit-transform: rotate(-45deg) scale(0, 0); transform: rotate(-45deg) scale(0, 0); }

[data='checkbox-check'] input[type="checkbox"] ~ label:after { vertical-align: top; content: ''; position: absolute; z-index: 0; top: 0; left: 0px; width: 1.5rem; height: 1.5rem; background: #fff; cursor: pointer; }

[data='checkbox-check'] input[type="checkbox"]:checked ~ label:before { -webkit-transform: rotate(-45deg) scale(1, 1); transform: rotate(-45deg) scale(1, 1); border-color: #fff; }

[data='checkbox-check'] input[type="checkbox"]:checked ~ label:after { background: #4A90E2; }

nav { margin-bottom: 1.5rem; line-height: 4.75rem; background: #4A90E2; }

nav ul { padding: 0 0; max-width: 38.75rem; margin-left: auto; margin-right: auto; display: flex; justify-content: space-between; }

nav ul > li { position: relative; width: 10rem; text-align: center; font-size: 1.5rem; font-display: 'Roboto-Regular'; }

nav ul > li a { color: #00408B; }

nav ul > li.is-active a, nav ul > li:hover a { color: #fff; }

nav ul > li.is-active a:after, nav ul > li:hover a:after { content: ''; position: absolute; left: 0; bottom: 0; width: 100%; height: 0.3125rem; background: #00408B; }

.addinner { display: none; }

.m-task-item { box-sizing: border-box; padding: 0 0; max-width: 38.75rem; margin-left: auto; margin-right: auto; height: 6.375rem; margin-bottom: 0.5rem; padding: 1.25rem 1.875rem; border-radius: 0.25rem; background-color: #f2f2f2; display: flex; justify-content: space-between; }

.m-task-item .group { flex: 0 0 atuo; width: 2.25rem; }

.m-task-item .info { display: flex; flex-wrap: wrap; align-content: space-between; flex: 1 1 0; }

.m-task-item .info input[type='text'] { border: 0px; font-size: 1.5rem; font-family: 'Roboto'; font-weight: 500; line-height: 1.25rem; background: transparent; }

.m-task-item .info input[type='text']::-webkit-input-placeholder { color: #000; }

.m-task-item .info input[type='text']:-ms-input-placeholder { color: #000; }

.m-task-item .info input[type='text']::-ms-input-placeholder { color: #000; }

.m-task-item .info input[type='text']::placeholder { color: #000; }

.m-task-item .info .state > span { display: inline-block; color: #757575; margin-right: 1rem; }

.m-task-item .info .state > span > em { margin-left: 0.5rem; }

.m-task-item .edit { flex: 0 0 atuo; font-size: 1.5rem; }

.m-task-item .edit i { display: inline-block; margin-left: 1.25rem; }

.m-task-item.topic { background: #FFF2DC; }

.m-task-item.topic .edit .fa-star { color: #F5A623; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC5zY3NzIiwidG9kb2xpc3Quc2NzcyIsIl9sYXlvdXQuc2NzcyIsInRvZG9saXN0LmNzcyIsIl9jaGVja2JveC5zY3NzIiwiX2Z1bmN0aW9uLnNjc3MiLCJfbWl4aW4uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0VBR0U7QUNBRiw4REFBWTtBREVaLDZlQWFDLFVBQVMsQ0FDVCxXQUFVLENBQ1YsVUFBUyxDQUNULGdCQUFlLENBQ2YsY0FBYSxDQUNiLHlCQUF3QixFQUN4Qjs7QUFDRCxpREFBaUQ7QUFDakQsMEZBRUMsZUFBYyxFQUNkOztBQUNELE9BQ0MsZUFBYyxFQUNkOztBQUNELFNBQ0MsaUJBQWdCLEVBQ2hCOztBQUNELGdCQUNDLGFBQVksRUFDWjs7QUFDRCx5REFFQyxZQUFXLENBQ1gsY0FBYSxFQUNiOztBQUNELFFBQ0MsMEJBQXlCLENBQ3pCLGtCQUFpQixFQUNqQjs7QUUzQ0QsYUFDRSxtQkFBa0IsQ0FDbkIsK0JBQThCLENBQzlCLGtGQUFpRixFQUNqRjs7QUFDRCxPQUNFLGdCQUFlLEVBQ2hCOztBQUVELElBQUcsc0JBQXFCLENBQUUsZUFBYyxDQUN2QyxnQkFBZSxFQU1mOztBQVBELFVBR0UsWUFBVyxDQUNYLHNCQUFxQixDQUNyQixhQUFZLEVBQ1o7O0FBR0YsZUFDQyxzQkFBcUIsRUFDckI7O0FBRUQsUUFBTyx5QkFBd0IsRUFJOUI7O0FBSkQsY0FFRSxjQUFhLEVBQ2I7O0FDS0YsMEJDL0JFLG1CQUFrQixDQUNsQixzQkFBcUIsQ0FDckIsb0JDRmtDLEVENENuQzs7QURYRCxnRUMzQlEsWUFBVyxDQUNYLG1CQUFrQixDQUNsQixXQUFVLENBQ1YsY0NUNEIsQ0RVNUIsZUNWNEIsQ0RXNUIsZUNYNEIsQ0RZNUIsaUJDWjRCLENEYTVCLCtCQUE4QixDQUM5Qix1QkFBc0IsQ0FDdEIseUJBQXdCLENBQ3hCLG9CQUFtQixDQUNuQixzRUFBeUQsQ0FBekQsOERBQXlELENBQXpELHlIQUF5RCxDQUN6RCw4Q0FBcUMsQ0FBckMsc0NBQXFDLEVBQ3RDOztBRGdCUCwrRENkUSxvQkFBbUIsQ0FDbkIsWUFBVyxDQUNYLG1CQUFrQixDQUNsQixXQUFVLENBQ1YsT0FBTSxDQUNOLFVBQVMsQ0FFVCxjQzVCNEIsQ0Q2QjVCLGVDN0I0QixDRDhCNUIsaUJBQWdCLENBQ2hCLGdCQUFlLEVBQ2hCOztBREtQLHdFQ0RRLDhDQUFxQyxDQUFyQyxzQ0FBcUMsQ0FDckMsbUJBQWtCLEVBQ25COztBRENQLHVFQ0NRLG9CQUFtQixFQUNwQjs7QUh0Q1AsTUFDRSxzQklKa0MsQ0pLbEMscUJJTGtDLENKTWxDLG9CQUFtQixFQTZCcEI7O0FBaENELFNLSEUsYURENEIsQ0NFNUIsb0JERGtDLENDRWxDLGtCQUFpQixDQUNqQixtQkFBa0IsQ0xNaEIsY0FBYSxDQUNiLCtCQUE4QixFQXdCL0I7O0FBL0JILGNBU00sbUJBQWtCLENBQ2xCLGFJYjhCLENKYzlCLG1CQUFrQixDQUVsQixrQkloQjhCLENKaUI5QiwrQkFBOEIsRUFnQi9COztBQTlCTCxnQkFnQlEsZUFBYyxFQUNmOztBQWpCUCwrQ0FtQlEsWUFBVyxFQVVaOztBQTdCUCwyREFxQlUsWUFBVyxDQUNYLG1CQUFrQixDQUNsQixRQUFNLENBQ04sVUFBUyxDQUNULFlBQVcsQ0FDWCxrQkk3QjBCLENKOEIxQixvQkFBbUIsRUFDcEI7O0FBTVQsWUFDRSxjQUFhLEVBQ2Q7O0FBQ0QsZUFDRSx1QkFBc0IsQ0t6Q3RCLGFERDRCLENDRTVCLG9CRERrQyxDQ0VsQyxrQkFBaUIsQ0FDakIsbUJBQWtCLENMd0NsQixpQkkzQ2tDLENKNENsQyxzQkk1Q2tDLENKNkNsQywwQkk3Q2tDLENKOENsQyx1Qkk5Q2tDLENKK0NsQywwQkFBeUIsQ0FDekIsY0FBYSxDQUNiLCtCQUE4QixFQWtEL0I7O0FBM0RELHNCQVdJLGVBQWMsQ0FDZCxlSXBEZ0MsRUpxRGpDOztBQWJILHFCQWdCSSxjQUFhLENBQ2IsZ0JBQWUsQ0FDZiw2QkFBNEIsQ0FDNUIsWUFBVyxFQXNCWjs7QUF6Q0gsd0NBd0JNLFlBQVUsQ0FDVixrQklqRThCLENKa0U5QixzQkFBcUIsQ0FDckIsaUJBQWdCLENBQ2hCLHFCSXBFOEIsQ0pxRTlCLHdCQUF1QixFQUN4Qjs7QUE5QkwsbUVBc0JRLFlBQVcsRUFDWjs7QUF2QlAsOERBc0JRLFlBQVcsRUFDWjs7QUF2QlAsK0RBc0JRLFlBQVcsRUFDWjs7QUF2QlAscURBc0JRLFlBQVcsRUFDWjs7QUF2QlAsbUNBaUNRLHNCQUFxQixDQUNyQixlQUFhLENBQ2IsbUJJM0U0QixFSitFN0I7O0FBdkNQLHdDQXFDVSxvQkk3RTBCLEVKOEUzQjs7QUF0Q1QscUJBMkNJLGVBQWMsQ0FFZCxrQklyRmdDLEVKMEZqQzs7QUFsREgsdUJBK0NNLHNCQUFxQixDQUNyQixxQkl4RjhCLEVKeUYvQjs7QUFqREwscUJBb0RJLG9CQUFtQixFQU1wQjs7QUExREgsb0NBdURRLGVBQWMsRUFDZiIsImZpbGUiOiJ0b2RvbGlzdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcclxuICAgdjIuMCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXHJcbiovXHJcblxyXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcclxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxyXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXHJcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXHJcbmIsIHUsIGksIGNlbnRlcixcclxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcclxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXHJcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxyXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXHJcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXHJcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxyXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xyXG5cdG1hcmdpbjogMDtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdGJvcmRlcjogMDtcclxuXHRmb250LXNpemU6IDEwMCU7XHJcblx0Zm9udDogaW5oZXJpdDtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xyXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcclxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxufVxyXG5ib2R5IHtcclxuXHRsaW5lLWhlaWdodDogMTtcclxufVxyXG5vbCwgdWwge1xyXG5cdGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuYmxvY2txdW90ZSwgcSB7XHJcblx0cXVvdGVzOiBub25lO1xyXG59XHJcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSwgcTphZnRlciB7XHJcblx0Y29udGVudDogJyc7XHJcblx0Y29udGVudDogbm9uZTtcclxufVxyXG50YWJsZSB7XHJcblx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuXHRib3JkZXItc3BhY2luZzogMDtcclxufSIsIkBpbXBvcnQgJ2xheW91dCc7XHJcbkBpbXBvcnQgJ2NoZWNrYm94JztcclxuXHJcbkBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG86NDAwLDUwMCk7XHJcblxyXG5cclxubmF2e1xyXG4gIG1hcmdpbi1ib3R0b206IHJlbSgyNHB4KTtcclxuICBsaW5lLWhlaWdodDogcmVtKDc2cHgpO1xyXG4gIGJhY2tncm91bmQ6ICM0QTkwRTI7XHJcbiAgdWx7XHJcbiAgICBAaW5jbHVkZSBtYXhXaWR0aCg2MjBweCk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgPmxpe1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHdpZHRoOnJlbSgxNjBweCk7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgXHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDI0cHgpO1xyXG4gICAgICBmb250LWRpc3BsYXk6ICdSb2JvdG8tUmVndWxhcic7XHJcbiAgICAgIGF7XHJcbiAgICAgICAgY29sb3I6ICMwMDQwOEI7XHJcbiAgICAgIH1cclxuICAgICAgJi5pcy1hY3RpdmUgYSwmOmhvdmVyIGF7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgbGVmdDowO1xyXG4gICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICBoZWlnaHQ6IHJlbSg1cHgpO1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogIzAwNDA4QjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5hZGRpbm5lcntcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5tLXRhc2staXRlbXtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIEBpbmNsdWRlIG1heFdpZHRoKDYyMHB4KTtcclxuICBoZWlnaHQ6IHJlbSgxMDJweCk7XHJcbiAgbWFyZ2luLWJvdHRvbTogcmVtKDhweCk7XHJcbiAgcGFkZGluZzogcmVtKDIwcHgpIHJlbSgzMHB4KTtcclxuICBib3JkZXItcmFkaXVzOiByZW0oNHB4KTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIC5ncm91cHtcclxuICAgIGZsZXg6IDAgMCBhdHVvO1xyXG4gICAgd2lkdGg6IHJlbSgzNnB4KTtcclxuICB9XHJcbiAgXHJcbiAgLmluZm97XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGZsZXg6IDEgMSAwO1xyXG4gICAgaW5wdXRbdHlwZT0ndGV4dCdde1xyXG4gICAgICAmOjpwbGFjZWhvbGRlcntcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgfVxyXG4gICAgICBib3JkZXI6MHB4O1xyXG4gICAgICBmb250LXNpemU6IHJlbSgyNHB4KTtcclxuICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBsaW5lLWhlaWdodDogcmVtKDIwcHgpO1xyXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIH1cclxuICAgIC5zdGF0ZXtcclxuICAgICAgPiBzcGFue1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBjb2xvcjojNzU3NTc1O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDE2cHgpO1xyXG4gICAgICAgID5lbXtcclxuICAgICAgICAgIG1hcmdpbi1sZWZ0OiByZW0oOHB4KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLmVkaXR7XHJcbiAgICBmbGV4OiAwIDAgYXR1bztcclxuICAgIC8vIEBpbmNsdWRlIHNwYW4oMTIsMik7XHJcbiAgICBmb250LXNpemU6IHJlbSgyNHB4KTtcclxuICAgIGl7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgbWFyZ2luLWxlZnQ6IHJlbSgyMHB4KTtcclxuICAgIH1cclxuICB9XHJcbiAgJi50b3BpY3tcclxuICAgIGJhY2tncm91bmQ6ICNGRkYyREM7XHJcbiAgICAuZWRpdHsgIFxyXG4gICAgICAuZmEtc3RhcntcclxuICAgICAgICBjb2xvcjogI0Y1QTYyMztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuIiwiQGltcG9ydCAncmVzZXQnO1xyXG5AaW1wb3J0ICdmdW5jdGlvbic7XHJcbkBpbXBvcnQgJ21peGluJztcclxuXHJcbmJvZHksaHRtbHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xyXG5cdGZvbnQtZmFtaWx5OiBcIk1pY3Jvc29mdCBKaGVuZ0hlaVwiLCBcIkFwcGxlIExpR290aGljIE1lZGl1bVwiLCBcInNhbnMtc2VyaWZcIiwgXCJzZXJpZlwiO1xyXG59XHJcbmh0bWx7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG5heyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IGRpc3BsYXk6IGJsb2NrO1xyXG5cdHRyYW5zaXRpb246IC4zcztcclxuXHQmOmhvdmVye1xyXG5cdFx0Y29sb3I6ICNmZmY7XHJcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0XHRvcGFjaXR5OiAwLjc7XHJcblx0fVxyXG59XHJcblxyXG5hW2hyZWZePXRlbF17XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5pbnB1dHsgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyBcclxuXHQmOmZvY3Vze1xyXG5cdFx0b3V0bGluZTogbm9uZTtcclxuXHR9XHJcbn1cclxuXHJcbiIsIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxyXG4gICB2Mi4wIHwgMjAxMTAxMjZcclxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcclxuKi9cbkBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG86NDAwLDUwMCk7XG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSwgYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsIHNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsIGIsIHUsIGksIGNlbnRlciwgZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLCBhcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSwgdGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IDA7IGZvbnQtc2l6ZTogMTAwJTsgZm9udDogaW5oZXJpdDsgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7IGRpc3BsYXk6IGJsb2NrOyB9XG5cbmJvZHkgeyBsaW5lLWhlaWdodDogMTsgfVxuXG5vbCwgdWwgeyBsaXN0LXN0eWxlOiBub25lOyB9XG5cbmJsb2NrcXVvdGUsIHEgeyBxdW90ZXM6IG5vbmU7IH1cblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsIHE6YmVmb3JlLCBxOmFmdGVyIHsgY29udGVudDogJyc7IGNvbnRlbnQ6IG5vbmU7IH1cblxudGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBib3JkZXItc3BhY2luZzogMDsgfVxuXG5ib2R5LCBodG1sIHsgcG9zaXRpb246IHJlbGF0aXZlOyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IGZvbnQtZmFtaWx5OiBcIk1pY3Jvc29mdCBKaGVuZ0hlaVwiLCBcIkFwcGxlIExpR290aGljIE1lZGl1bVwiLCBcInNhbnMtc2VyaWZcIiwgXCJzZXJpZlwiOyB9XG5cbmh0bWwgeyBmb250LXNpemU6IDE2cHg7IH1cblxuYSB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgZGlzcGxheTogYmxvY2s7IHRyYW5zaXRpb246IC4zczsgfVxuXG5hOmhvdmVyIHsgY29sb3I6ICNmZmY7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgb3BhY2l0eTogMC43OyB9XG5cbmFbaHJlZl49dGVsXSB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5pbnB1dCB7IC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG5pbnB1dDpmb2N1cyB7IG91dGxpbmU6IG5vbmU7IH1cblxuW2RhdGE9J2NoZWNrYm94LWNoZWNrJ10geyBwb3NpdGlvbjogcmVsYXRpdmU7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbGluZS1oZWlnaHQ6IDEuNXJlbTsgfVxuXG5bZGF0YT0nY2hlY2tib3gtY2hlY2snXSBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gfiBsYWJlbDpiZWZvcmUgeyBjb250ZW50OiAnJzsgcG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAxOyB0b3A6IDAuMzc1cmVtOyBsZWZ0OiAwLjM3NXJlbTsgd2lkdGg6IDAuNzVyZW07IGhlaWdodDogMC4zNzVyZW07IGJvcmRlcjogMC4xMjVyZW0gc29saWQgIzE5MTkxOTsgYm9yZGVyLXRvcC1zdHlsZTogbm9uZTsgYm9yZGVyLXJpZ2h0LXN0eWxlOiBub25lOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cyBjdWJpYy1iZXppZXIoMC40NSwgMS44LCAwLjUsIDAuNzUpOyB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHNjYWxlKDAsIDApOyB9XG5cbltkYXRhPSdjaGVja2JveC1jaGVjayddIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB+IGxhYmVsOmFmdGVyIHsgdmVydGljYWwtYWxpZ246IHRvcDsgY29udGVudDogJyc7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMDsgdG9wOiAwOyBsZWZ0OiAwcHg7IHdpZHRoOiAxLjVyZW07IGhlaWdodDogMS41cmVtOyBiYWNrZ3JvdW5kOiAjZmZmOyBjdXJzb3I6IHBvaW50ZXI7IH1cblxuW2RhdGE9J2NoZWNrYm94LWNoZWNrJ10gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgfiBsYWJlbDpiZWZvcmUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHNjYWxlKDEsIDEpOyBib3JkZXItY29sb3I6ICNmZmY7IH1cblxuW2RhdGE9J2NoZWNrYm94LWNoZWNrJ10gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgfiBsYWJlbDphZnRlciB7IGJhY2tncm91bmQ6ICM0QTkwRTI7IH1cblxubmF2IHsgbWFyZ2luLWJvdHRvbTogMS41cmVtOyBsaW5lLWhlaWdodDogNC43NXJlbTsgYmFja2dyb3VuZDogIzRBOTBFMjsgfVxuXG5uYXYgdWwgeyBwYWRkaW5nOiAwIDA7IG1heC13aWR0aDogMzguNzVyZW07IG1hcmdpbi1sZWZ0OiBhdXRvOyBtYXJnaW4tcmlnaHQ6IGF1dG87IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG5uYXYgdWwgPiBsaSB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgd2lkdGg6IDEwcmVtOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMS41cmVtOyBmb250LWRpc3BsYXk6ICdSb2JvdG8tUmVndWxhcic7IH1cblxubmF2IHVsID4gbGkgYSB7IGNvbG9yOiAjMDA0MDhCOyB9XG5cbm5hdiB1bCA+IGxpLmlzLWFjdGl2ZSBhLCBuYXYgdWwgPiBsaTpob3ZlciBhIHsgY29sb3I6ICNmZmY7IH1cblxubmF2IHVsID4gbGkuaXMtYWN0aXZlIGE6YWZ0ZXIsIG5hdiB1bCA+IGxpOmhvdmVyIGE6YWZ0ZXIgeyBjb250ZW50OiAnJzsgcG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwOyBib3R0b206IDA7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDAuMzEyNXJlbTsgYmFja2dyb3VuZDogIzAwNDA4QjsgfVxuXG4uYWRkaW5uZXIgeyBkaXNwbGF5OiBub25lOyB9XG5cbi5tLXRhc2staXRlbSB7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDAgMDsgbWF4LXdpZHRoOiAzOC43NXJlbTsgbWFyZ2luLWxlZnQ6IGF1dG87IG1hcmdpbi1yaWdodDogYXV0bzsgaGVpZ2h0OiA2LjM3NXJlbTsgbWFyZ2luLWJvdHRvbTogMC41cmVtOyBwYWRkaW5nOiAxLjI1cmVtIDEuODc1cmVtOyBib3JkZXItcmFkaXVzOiAwLjI1cmVtOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cblxuLm0tdGFzay1pdGVtIC5ncm91cCB7IGZsZXg6IDAgMCBhdHVvOyB3aWR0aDogMi4yNXJlbTsgfVxuXG4ubS10YXNrLWl0ZW0gLmluZm8geyBkaXNwbGF5OiBmbGV4OyBmbGV4LXdyYXA6IHdyYXA7IGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IGZsZXg6IDEgMSAwOyB9XG5cbi5tLXRhc2staXRlbSAuaW5mbyBpbnB1dFt0eXBlPSd0ZXh0J10geyBib3JkZXI6IDBweDsgZm9udC1zaXplOiAxLjVyZW07IGZvbnQtZmFtaWx5OiAnUm9ib3RvJzsgZm9udC13ZWlnaHQ6IDUwMDsgbGluZS1oZWlnaHQ6IDEuMjVyZW07IGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG5cbi5tLXRhc2staXRlbSAuaW5mbyBpbnB1dFt0eXBlPSd0ZXh0J106OnBsYWNlaG9sZGVyIHsgY29sb3I6ICMwMDA7IH1cblxuLm0tdGFzay1pdGVtIC5pbmZvIC5zdGF0ZSA+IHNwYW4geyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGNvbG9yOiAjNzU3NTc1OyBtYXJnaW4tcmlnaHQ6IDFyZW07IH1cblxuLm0tdGFzay1pdGVtIC5pbmZvIC5zdGF0ZSA+IHNwYW4gPiBlbSB7IG1hcmdpbi1sZWZ0OiAwLjVyZW07IH1cblxuLm0tdGFzay1pdGVtIC5lZGl0IHsgZmxleDogMCAwIGF0dW87IGZvbnQtc2l6ZTogMS41cmVtOyB9XG5cbi5tLXRhc2staXRlbSAuZWRpdCBpIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBtYXJnaW4tbGVmdDogMS4yNXJlbTsgfVxuXG4ubS10YXNrLWl0ZW0udG9waWMgeyBiYWNrZ3JvdW5kOiAjRkZGMkRDOyB9XG5cbi5tLXRhc2staXRlbS50b3BpYyAuZWRpdCAuZmEtc3RhciB7IGNvbG9yOiAjRjVBNjIzOyB9XG4iLCJcclxuXHJcbltkYXRhPSdjaGVja2JveC1jaGVjayddIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGxpbmUtaGVpZ2h0OiByZW0oMjRweCk7XHJcbiAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcclxuICAgICZ+bGFiZWwge1xyXG4gICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgdG9wOiByZW0oNnB4KTtcclxuICAgICAgICBsZWZ0OiByZW0oNnB4KTtcclxuICAgICAgICB3aWR0aDogcmVtKDEycHgpO1xyXG4gICAgICAgIGhlaWdodDogcmVtKDZweCk7XHJcbiAgICAgICAgYm9yZGVyOiByZW0oMnB4KSBzb2xpZCAjMTkxOTE5O1xyXG4gICAgICAgIGJvcmRlci10b3Atc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC40cyBjdWJpYy1iZXppZXIoLjQ1LCAxLjgsIC41LCAuNzUpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGUoMCwgMCk7XHJcbiAgICAgIH1cclxuICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICAgIC8vIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XHJcbiAgICAgICAgd2lkdGg6IHJlbSgyNHB4KTtcclxuICAgICAgICBoZWlnaHQ6IHJlbSgyNHB4KTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJjpjaGVja2VkfmxhYmVsIHtcclxuICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGUoMSwgMSk7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xyXG4gICAgICB9XHJcbiAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICM0QTkwRTI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iLCIvL3B4IHRvIHJlbVxyXG5AZnVuY3Rpb24gcmVtKCR0YXJnZXQsICRjb250ZXh0OiAxNnB4KXtcclxuICBAaWYgJHRhcmdldCA9PSAwIHsgQHJldHVybiAwIH1cclxuICBAcmV0dXJuICgkdGFyZ2V0IC8gJGNvbnRleHQpKyAwcmVtO1xyXG59XHJcblxyXG4vLyBweCB0byAlXHJcbkBmdW5jdGlvbiBwZXJjZW50KCR0YXJnZXQsICRjb250YWluZXI6IDk2MCl7XHJcbiAgQGlmICR0YXJnZXQgPT0gMCB7IEByZXR1cm4gMCB9XHJcbiAgQHJldHVybiAoJHRhcmdldCAvICRjb250YWluZXIqMTAwKSsgMCU7XHJcbn1cclxuXHJcblxyXG4iLCJcclxuLy8g5pyA5aSn5a+sXHJcbkBtaXhpbiBtYXhXaWR0aCggJHdpZHRoLCAkc3BhY2U6IDApe1xyXG4gIHBhZGRpbmc6IDAgcmVtKCAkc3BhY2UgKTtcclxuICBtYXgtd2lkdGg6IHJlbSggJHdpZHRoICsgKCRzcGFjZSoyKSApO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bzsgXHJcbn1cclxuXHJcbi8vIGdyaWRcclxuQGZ1bmN0aW9uIHNwYW4oICRncmlkLCAkY29sdW1uLCAkZ3V0dGVyOiAwICl7XHJcbiAgQHJldHVybiAoIDEwMCAvICRncmlkICkgKiAkY29sdW1uICsgMCUgO1xyXG59XHJcblxyXG5AbWl4aW4gc3BhbiggJGdyaWQsICRjb2x1bW4sICRndXR0ZXI6IDAgLCRudGg6IG5vbmUpe1xyXG4gIHdpZHRoOiBzcGFuKCAkZ3JpZCwgJGNvbHVtbik7XHJcbiAgcGFkZGluZzogMCByZW0oJGd1dHRlcikgLyAyO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblxyXG4gIEBpZiAkbnRoID09IGZpcnN0e1xyXG4gICAgbWFyZ2luLWxlZnQ6IHJlbSgtJGd1dHRlcikgLyAyO1xyXG4gIH1AZWxzZSBpZiAkbnRoID09IGxhc3R7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IHJlbSgtJGd1dHRlcikgLyAyO1xyXG4gIH1AZWxzZSBpZiAkbnRoID09IG5vbmV7XHJcbiAgICBtYXJnaW4tbGVmdCA6YXV0bztcclxuICAgIG1hcmdpbi1yaWdodCA6YXV0bztcclxuICB9XHJcbn1cclxuXHJcbi8vIGFuaW1hdGlvblxyXG5AbWl4aW4gYW5pbWF0aW9uKCRhbmltYXRpb24uLi4pIHtcclxuICAtby1hbmltYXRpb246ICRhbmltYXRpb247XHJcbiAgLW1vei1hbmltYXRpb246ICRhbmltYXRpb247XHJcbiAgLXdlYmtpdC1hbmltYXRpb246ICRhbmltYXRpb247XHJcbiAgYW5pbWF0aW9uOiAkYW5pbWF0aW9uO1xyXG59XHJcbi8vIOWLleeVq+WLleS9nFxyXG4vLyBAa2V5ZnJhbWVzIHNwaW4ge1xyXG4vLyAgIFx0MCV7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IHRyYW5mb3JtOiByb3RhdGUoMGRlZyk7fVxyXG4vLyBcdDEwMCV7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgdHJhbmZvcm06IHJvdGF0ZSgzNjBkZWcpO31cclxuLy8gfVxyXG4vLyBAaW5jbHVkZSBhbmltYXRpb24oc3BpbiAxcyBsaW5lYXIgaW5maW5pdGUpO1xyXG5cclxuXHJcbiJdfQ== */
