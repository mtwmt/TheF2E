@import url("//fonts.googleapis.com/css?family=Roboto:300,400,500,700");
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote:before, blockquote:after, q:before, q:after { content: ''; content: none; }

table { border-collapse: collapse; border-spacing: 0; }

body, html { position: relative; -webkit-text-size-adjust: 100%; font-family: "Roboto","Microsoft JhengHei", "Apple LiGothic Medium", "sans-serif", "serif"; background: #E1E1E1; }

html { font-size: 16px; }

a { text-decoration: none; display: block; transition: .3s; }

a:hover { text-decoration: none; opacity: 0.7; }

a[href^=tel] { display: inline-block; }

input { -webkit-appearance: none; }

input:focus { outline: none; }

@media (min-width: 320px), (max-width: 320px) { html { font-size: 12px; } }

@media (min-width: 360px) { html { font-size: 13.5px; } }

@media (min-width: 400px) { html { font-size: 15px; } }

@media (min-width: 640px) { html { font-size: 16px; } }

nav { height: 4.75rem; line-height: 4.75rem; background: #4A90E2; }

nav ul { padding: 0 0; max-width: 38.75rem; margin-left: auto; margin-right: auto; display: flex; justify-content: space-between; }

nav ul > li { position: relative; width: 10rem; text-align: center; font-size: 1.5rem; font-family: 'Roboto'; }

nav ul > li a { color: #00408B; }

nav ul > li.is-active a, nav ul > li:hover a { color: #fff; }

nav ul > li.is-active a:after, nav ul > li:hover a:after { content: ''; position: absolute; left: 0; bottom: 0; width: 100%; height: 0.3125rem; background: #00408B; }

.content { margin-top: 1.5rem; margin-bottom: 3rem; padding: 0 0; max-width: 38.75rem; margin-left: auto; margin-right: auto; }

.content * { box-sizing: border-box; }

[data='checkbox-check'] { position: relative; display: inline-block; line-height: 1.5rem; }

[data='checkbox-check'] input[type="checkbox"] ~ label { padding-left: 1.5rem; }

[data='checkbox-check'] input[type="checkbox"] ~ label:before { content: ''; position: absolute; z-index: 1; top: 0.375rem; left: 0.375rem; width: 0.75rem; height: 0.375rem; border: 0.125rem solid #191919; border-top-style: none; border-right-style: none; vertical-align: top; transition: -webkit-transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); transition: transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); transition: transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75), -webkit-transform 0.4s cubic-bezier(0.45, 1.8, 0.5, 0.75); -webkit-transform: rotate(-45deg) scale(0, 0); transform: rotate(-45deg) scale(0, 0); }

[data='checkbox-check'] input[type="checkbox"] ~ label:after { vertical-align: top; content: ''; position: absolute; z-index: 0; top: 0; left: 0px; width: 1.5rem; height: 1.5rem; background: #fff; cursor: pointer; }

[data='checkbox-check'] input[type="checkbox"]:checked ~ label:before { -webkit-transform: rotate(-45deg) scale(1, 1); transform: rotate(-45deg) scale(1, 1); border-color: #fff; }

[data='checkbox-check'] input[type="checkbox"]:checked ~ label:after { background: #4A90E2; }

.is-del [data='checkbox-check'] { line-height: 0.6rem; }

.m-addtask { transition: .5s; position: relative; margin-bottom: 1.5rem; height: 4rem; }

.m-addtask.is-active { height: 31.25rem; }

.m-addtask.is-active .addinner { max-height: 31.25rem; -webkit-transform: scale(1, 1); transform: scale(1, 1); }

.m-addtask .add { padding: 0 1.875rem; border-radius: 0.25rem; height: 4rem; line-height: 4rem; font-size: 1.5rem; border: 0.125rem solid #C8C8C8; color: #C8C8C8; background: #fff; }

.m-addtask .addinner { position: absolute; top: 0; left: 0; width: 100%; max-height: 0; -webkit-transform: scale(1, 0); transform: scale(1, 0); }

[data='check-file'] { display: flex; }

[data='check-file'] .fileinfo { margin-right: 1.5rem; font-family: 'Roboto'; line-height: 1.25rem; }

[data='check-file'] .fileinfo .date { color: #757575; }

[data='check-file'] input { display: none; }

[data='check-file'] label { align-self: center; transition: .3s; position: relative; border-radius: 0.125rem; display: block; width: 2rem; height: 2rem; background: #c8c8c8; cursor: pointer; }

[data='check-file'] label:hover { background: #4A90E2; }

[data='check-file'] label:before, [data='check-file'] label:after { content: ""; position: absolute; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 0.75rem; height: 0.125rem; background: #fff; }

[data='check-file'] label:after { -webkit-transform: translate(-50%, -50%) rotate(90deg); transform: translate(-50%, -50%) rotate(90deg); }

.m-task-item { border-radius: 0.25rem; margin-bottom: 0.5rem; height: 6.375rem; transition: .5s; }

.m-task-item.topic .m-task-label { background: #FFF2DC; }

.m-task-item.topic .m-task-label .edit .fa-star { color: #F5A623; }

.m-task-item.is-edit { box-shadow: 0px 4px 10px #c8c8c8; margin-bottom: 1rem; height: 29.875rem; }

.m-task-item.is-edit .m-task-label { border-radius: 0.25rem 0.25rem 0 0; height: 4.75rem; }

.m-task-item.is-edit .m-task-label .state { display: none; }

.m-task-item.is-edit .m-task-label .group, .m-task-item.is-edit .m-task-label .info, .m-task-item.is-edit .m-task-label .edit { align-self: center; }

.m-task-item.is-edit .m-task-label .fa-edit { color: #4a90e2; }

.m-task-item.is-edit .m-task-event { -webkit-transform: scale(1, 1); transform: scale(1, 1); }

.m-task-item.is-del .m-task-label { height: 4.75rem; }

.m-task-item.is-del .group, .m-task-item.is-del .info, .m-task-item.is-del .edit { align-self: center; }

.m-task-item.is-del h4, .m-task-item.is-del input[type='text'] { color: #9B9B9B; text-decoration: line-through; }

.m-task-item.is-del .state { display: none; }

.m-task-label { border-radius: 0.25rem; height: 6.375rem; padding: 1.25rem 1.875rem; background-color: #f2f2f2; display: flex; justify-content: space-between; }

.m-task-label .group { flex: 0 0 atuo; width: 2.25rem; }

.m-task-label .info { display: flex; flex-wrap: wrap; align-content: space-between; flex: 1 1 0; }

.m-task-label .info input[type='text'] { border: 0px; font-size: 1.5rem; font-family: 'Roboto'; font-weight: 500; line-height: 1.25rem; background: transparent; }

.m-task-label .info input[type='text']::-webkit-input-placeholder { color: #000; }

.m-task-label .info input[type='text']:-ms-input-placeholder { color: #000; }

.m-task-label .info input[type='text']::-ms-input-placeholder { color: #000; }

.m-task-label .info input[type='text']::placeholder { color: #000; }

.m-task-label .info h4 { width: 100%; font-size: 1.5rem; font-family: 'Roboto'; font-weight: 500; line-height: 1.25rem; }

.m-task-label .info .state > span { display: inline-block; color: #757575; margin-right: 1rem; }

.m-task-label .info .state > span > em { margin-left: 0.5rem; }

.m-task-label .edit { flex: 0 0 atuo; font-size: 1.5rem; }

.m-task-label .edit i { display: inline-block; margin-left: 1.25rem; cursor: pointer; }

.m-task-event { position: relative; border-radius: 0 0 0.25rem 0.25rem; border-top: 0.125rem solid #c8c8c8; max-height: 0; transition: .5s; -webkit-transform: scale(1, 0); transform: scale(1, 0); -webkit-transform-origin: top; transform-origin: top; }

.m-task-event .m-task-block { padding: 1.25rem 4.375rem 0.5rem 4.375rem; background: #F2F2F2; }

.m-task-event .m-task-block > div { margin-bottom: 1rem; }

.m-task-event .tit { font-size: 1.25rem; font-weight: 500; margin-bottom: 0.5rem; }

.m-task-event .tit i { display: inline-block; width: 1.25rem; margin-right: 0.375rem; }

.m-task-event .cont { padding-left: 1.5rem; }

.m-task-event textarea { resize: none; font-family: 'Roboto'; padding: 0.5rem 1rem; line-height: 1.5rem; font-size: 1rem; border: 0px; width: 100%; height: 7.5rem; }

.m-task-event .btns { text-align: center; display: flex; }

.m-task-event .btns i { display: inline-block; margin-right: 0.5rem; }

.m-task-event .btns a { position: relative; display: block; width: 50%; font-size: 1.5rem; line-height: 3.75rem; }

.m-task-event .btns a.cancel { border-radius: 0 0 0 0.25rem; color: #D0021B; background: #fff; }

.m-task-event .btns a.cancel:hover { background: #fdfdfd; }

.m-task-event .btns a.save { border-radius: 0 0 0.25rem 0; color: #fff; background: #4A90E2; }

.m-task-event .btns a.save:hover { background: #3982d7; }

.total { padding-left: 1.875rem; font-size: 1.5rem; color: #c8c8c8; font-style: italic; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9sYXlvdXQuc2NzcyIsIl9yZXNldC5zY3NzIiwidG9kb2xpc3QuY3NzIiwidG9kb2xpc3Quc2NzcyIsIl9mdW5jdGlvbi5zY3NzIiwiX21peGluLnNjc3MiLCJfY2hlY2tib3guc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSx1RUFBWTtBQ0ZaOzs7Q0NJQztBRENELDZlQWFDLFNBQVMsRUFDVCxVQUFVLEVBQ1YsU0FBUyxFQUNULGVBQWUsRUFDZixhQUFhLEVBQ2Isd0JBQXdCLEVBQUE7O0FBRXpCLGdEQUFBO0FBQ0EsMEZBRUMsY0FBYyxFQUFBOztBQUVmLE9BQ0MsY0FBYyxFQUFBOztBQUVmLFNBQ0MsZ0JBQWdCLEVBQUE7O0FBRWpCLGdCQUNDLFlBQVksRUFBQTs7QUFFYix5REFFQyxXQUFXLEVBQ1gsYUFBYSxFQUFBOztBQUVkLFFBQ0MseUJBQXlCLEVBQ3pCLGlCQUFpQixFQUFBOztBRHJDbEIsYUFDRSxrQkFBa0IsRUFDbkIsOEJBQThCLEVBQzlCLDBGQUEwRixFQUMxRixtQkFBbUIsRUFBQTs7QUFFcEIsT0FDRSxlQUFlLEVBQUE7O0FBR2pCLElBQUcscUJBQXFCLEVBQUUsY0FBYyxFQUN2QyxlQUFlLEVBQUE7O0FBRGhCLFVBR0UscUJBQXFCLEVBQ3JCLFlBQVksRUFBQTs7QUFJZCxlQUNDLHFCQUFxQixFQUFBOztBQUd0QixRQUFPLHdCQUF3QixFQUFBOztBQUEvQixjQUVFLGFBQWEsRUFBQTs7QUFJZixnREFBZ0QsT0FBTyxlQUFlLEVBQUEsRUFBSTs7QUFDMUUsNEJBQTRCLE9BQU8saUJBQWlCLEVBQUEsRUFBSTs7QUFDeEQsNEJBQTRCLE9BQU8sZUFBZSxFQUFBLEVBQUk7O0FBQ3RELDRCQUE0QixPQUFPLGVBQWUsRUFBQSxFQUFJOztBR3BDdEQsTUFDRSxlQ1NrQyxFRFJsQyxvQkNRa0MsRURQbEMsbUJBQW1CLEVBQUE7O0FBSHJCLFNFREUsWURVNEIsRUNUNUIsbUJEVWtDLEVDVGxDLGlCQUFpQixFQUNqQixrQkFBa0Is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dXJjZXNDb250ZW50IjpbIi8vIEBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG86IDMwMCw0MDAsNTAwKTtcclxuXHJcbkBpbXBvcnQgdXJsKCcvL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvOjMwMCw0MDAsNTAwLDcwMCcpO1xyXG5cclxuQGltcG9ydCAncmVzZXQnO1xyXG5AaW1wb3J0ICdmdW5jdGlvbic7XHJcbkBpbXBvcnQgJ21peGluJztcclxuXHJcblxyXG5ib2R5LGh0bWx7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcclxuXHRmb250LWZhbWlseTogXCJSb2JvdG9cIixcIk1pY3Jvc29mdCBKaGVuZ0hlaVwiLCBcIkFwcGxlIExpR290aGljIE1lZGl1bVwiLCBcInNhbnMtc2VyaWZcIiwgXCJzZXJpZlwiO1xyXG5cdGJhY2tncm91bmQ6ICNFMUUxRTE7XHJcbn1cclxuaHRtbHtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbmF7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgZGlzcGxheTogYmxvY2s7XHJcblx0dHJhbnNpdGlvbjogLjNzO1xyXG5cdCY6aG92ZXJ7XHJcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0XHRvcGFjaXR5OiAwLjc7XHJcblx0fVxyXG59XHJcblxyXG5hW2hyZWZePXRlbF17XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5pbnB1dHsgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyBcclxuXHQmOmZvY3Vze1xyXG5cdFx0b3V0bGluZTogbm9uZTtcclxuXHR9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAzMjBweCksIChtYXgtd2lkdGg6IDMyMHB4KSB7IGh0bWwgeyBmb250LXNpemU6IDEycHg7IH0gfVxyXG5AbWVkaWEgKG1pbi13aWR0aDogMzYwcHgpIHsgaHRtbCB7IGZvbnQtc2l6ZTogMTMuNXB4OyB9IH1cclxuQG1lZGlhIChtaW4td2lkdGg6IDQwMHB4KSB7IGh0bWwgeyBmb250LXNpemU6IDE1cHg7IH0gfVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHsgaHRtbCB7IGZvbnQtc2l6ZTogMTZweDsgfSB9IiwiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXHJcbiAgIHYyLjAgfCAyMDExMDEyNlxyXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxyXG4qL1xyXG5cclxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXHJcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcclxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxyXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxyXG5iLCB1LCBpLCBjZW50ZXIsXHJcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXHJcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxyXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcclxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxyXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxyXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcclxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcclxuXHRtYXJnaW46IDA7XHJcblx0cGFkZGluZzogMDtcclxuXHRib3JkZXI6IDA7XHJcblx0Zm9udC1zaXplOiAxMDAlO1xyXG5cdGZvbnQ6IGluaGVyaXQ7XHJcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXHJcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcbn1cclxuYm9keSB7XHJcblx0bGluZS1oZWlnaHQ6IDE7XHJcbn1cclxub2wsIHVsIHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbmJsb2NrcXVvdGUsIHEge1xyXG5cdHF1b3Rlczogbm9uZTtcclxufVxyXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcclxucTpiZWZvcmUsIHE6YWZ0ZXIge1xyXG5cdGNvbnRlbnQ6ICcnO1xyXG5cdGNvbnRlbnQ6IG5vbmU7XHJcbn1cclxudGFibGUge1xyXG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblx0Ym9yZGVyLXNwYWNpbmc6IDA7XHJcbn0iLCJAaW1wb3J0IHVybChcIi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG86MzAwLDQwMCw1MDAsNzAwXCIpO1xuLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXHJcbiAgIHYyLjAgfCAyMDExMDEyNlxyXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxyXG4qL1xuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsIGEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSwgZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLCBzbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLCBiLCB1LCBpLCBjZW50ZXIsIGRsLCBkdCwgZGQsIG9sLCB1bCwgbGksIGZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLCB0YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCwgYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIGZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksIHRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiAwOyBmb250LXNpemU6IDEwMCU7IGZvbnQ6IGluaGVyaXQ7IHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24geyBkaXNwbGF5OiBibG9jazsgfVxuXG5ib2R5IHsgbGluZS1oZWlnaHQ6IDE7IH1cblxub2wsIHVsIHsgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5ibG9ja3F1b3RlLCBxIHsgcXVvdGVzOiBub25lOyB9XG5cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLCBxOmJlZm9yZSwgcTphZnRlciB7IGNvbnRlbnQ6ICcnOyBjb250ZW50OiBub25lOyB9XG5cbnRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuYm9keSwgaHRtbCB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyBmb250LWZhbWlseTogXCJSb2JvdG9cIixcIk1pY3Jvc29mdCBKaGVuZ0hlaVwiLCBcIkFwcGxlIExpR290aGljIE1lZGl1bVwiLCBcInNhbnMtc2VyaWZcIiwgXCJzZXJpZlwiOyBiYWNrZ3JvdW5kOiAjRTFFMUUxOyB9XG5cbmh0bWwgeyBmb250LXNpemU6IDE2cHg7IH1cblxuYSB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgZGlzcGxheTogYmxvY2s7IHRyYW5zaXRpb246IC4zczsgfVxuXG5hOmhvdmVyIHsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBvcGFjaXR5OiAwLjc7IH1cblxuYVtocmVmXj10ZWxdIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbmlucHV0IHsgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbmlucHV0OmZvY3VzIHsgb3V0bGluZTogbm9uZTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpLCAobWF4LXdpZHRoOiAzMjBweCkgeyBodG1sIHsgZm9udC1zaXplOiAxMnB4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDM2MHB4KSB7IGh0bWwgeyBmb250LXNpemU6IDEzLjVweDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MDBweCkgeyBodG1sIHsgZm9udC1zaXplOiAxNXB4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7IGh0bWwgeyBmb250LXNpemU6IDE2cHg7IH0gfVxuXG5uYXYgeyBoZWlnaHQ6IDQuNzVyZW07IGxpbmUtaGVpZ2h0OiA0Ljc1cmVtOyBiYWNrZ3JvdW5kOiAjNEE5MEUyOyB9XG5cbm5hdiB1bCB7IHBhZGRpbmc6IDAgMDsgbWF4LXdpZHRoOiAzOC43NXJlbTsgbWFyZ2luLWxlZnQ6IGF1dG87IG1hcmdpbi1yaWdodDogYXV0bzsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG5cbm5hdiB1bCA+IGxpIHsgcG9zaXRpb246IHJlbGF0aXZlOyB3aWR0aDogMTByZW07IHRleHQtYWxpZ246IGNlbnRlcjsgZm9udC1zaXplOiAxLjVyZW07IGZvbnQtZmFtaWx5OiAnUm9ib3RvJzsgfVxuXG5uYXYgdWwgPiBsaSBhIHsgY29sb3I6ICMwMDQwOEI7IH1cblxubmF2IHVsID4gbGkuaXMtYWN0aXZlIGEsIG5hdiB1bCA+IGxpOmhvdmVyIGEgeyBjb2xvcjogI2ZmZjsgfVxuXG5uYXYgdWwgPiBsaS5pcy1hY3RpdmUgYTphZnRlciwgbmF2IHVsID4gbGk6aG92ZXIgYTphZnRlciB7IGNvbnRlbnQ6ICcnOyBwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IDA7IGJvdHRvbTogMDsgd2lkdGg6IDEwMCU7IGhlaWdodDogMC4zMTI1cmVtOyBiYWNrZ3JvdW5kOiAjMDA0MDhCOyB9XG5cbi5jb250ZW50IHsgbWFyZ2luLXRvcDogMS41cmVtOyBtYXJnaW4tYm90dG9tOiAzcmVtOyBwYWRkaW5nOiAwIDA7IG1heC13aWR0aDogMzguNzVyZW07IG1hcmdpbi1sZWZ0OiBhdXRvOyBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cblxuLmNvbnRlbnQgKiB7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuW2RhdGE9J2NoZWNrYm94LWNoZWNrJ10geyBwb3NpdGlvbjogcmVsYXRpdmU7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbGluZS1oZWlnaHQ6IDEuNXJlbTsgfVxuXG5bZGF0YT0nY2hlY2tib3gtY2hlY2snXSBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gfiBsYWJlbCB7IHBhZGRpbmctbGVmdDogMS41cmVtOyB9XG5cbltkYXRhPSdjaGVja2JveC1jaGVjayddIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB+IGxhYmVsOmJlZm9yZSB7IGNvbnRlbnQ6ICcnOyBwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDE7IHRvcDogMC4zNzVyZW07IGxlZnQ6IDAuMzc1cmVtOyB3aWR0aDogMC43NXJlbTsgaGVpZ2h0OiAwLjM3NXJlbTsgYm9yZGVyOiAwLjEyNXJlbSBzb2xpZCAjMTkxOTE5OyBib3JkZXItdG9wLXN0eWxlOiBub25lOyBib3JkZXItcmlnaHQtc3R5bGU6IG5vbmU7IHZlcnRpY2FsLWFsaWduOiB0b3A7IHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjQ1LCAxLjgsIDAuNSwgMC43NSk7IHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGUoMCwgMCk7IH1cblxuW2RhdGE9J2NoZWNrYm94LWNoZWNrJ10gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIH4gbGFiZWw6YWZ0ZXIgeyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb250ZW50OiAnJzsgcG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAwOyB0b3A6IDA7IGxlZnQ6IDBweDsgd2lkdGg6IDEuNXJlbTsgaGVpZ2h0OiAxLjVyZW07IGJhY2tncm91bmQ6ICNmZmY7IGN1cnNvcjogcG9pbnRlcjsgfVxuXG5bZGF0YT0nY2hlY2tib3gtY2hlY2snXSBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCB+IGxhYmVsOmJlZm9yZSB7IHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGUoMSwgMSk7IGJvcmRlci1jb2xvcjogI2ZmZjsgfVxuXG5bZGF0YT0nY2hlY2tib3gtY2hlY2snXSBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCB+IGxhYmVsOmFmdGVyIHsgYmFja2dyb3VuZDogIzRBOTBFMjsgfVxuXG4uaXMtZGVsIFtkYXRhPSdjaGVja2JveC1jaGVjayddIHsgbGluZS1oZWlnaHQ6IDAuNnJlbTsgfVxuXG4ubS1hZGR0YXNrIHsgdHJhbnNpdGlvbjogLjVzOyBwb3NpdGlvbjogcmVsYXRpdmU7IG1hcmdpbi1ib3R0b206IDEuNXJlbTsgaGVpZ2h0OiA0cmVtOyB9XG5cbi5tLWFkZHRhc2suaXMtYWN0aXZlIHsgaGVpZ2h0OiAzMS4yNXJlbTsgfVxuXG4ubS1hZGR0YXNrLmlzLWFjdGl2ZSAuYWRkaW5uZXIgeyBtYXgtaGVpZ2h0OiAzMS4yNXJlbTsgdHJhbnNmb3JtOiBzY2FsZSgxLCAxKTsgfVxuXG4ubS1hZGR0YXNrIC5hZGQgeyBwYWRkaW5nOiAwIDEuODc1cmVtOyBib3JkZXItcmFkaXVzOiAwLjI1cmVtOyBoZWlnaHQ6IDRyZW07IGxpbmUtaGVpZ2h0OiA0cmVtOyBmb250LXNpemU6IDEuNXJlbTsgYm9yZGVyOiAwLjEyNXJlbSBzb2xpZCAjQzhDOEM4OyBjb2xvcjogI0M4QzhDODsgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4ubS1hZGR0YXNrIC5hZGRpbm5lciB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyBsZWZ0OiAwOyB3aWR0aDogMTAwJTsgbWF4LWhlaWdodDogMDsgdHJhbnNmb3JtOiBzY2FsZSgxLCAwKTsgfVxuXG5bZGF0YT0nY2hlY2stZmlsZSddIHsgZGlzcGxheTogZmxleDsgfVxuXG5bZGF0YT0nY2hlY2stZmlsZSddIC5maWxlaW5mbyB7IG1hcmdpbi1yaWdodDogMS41cmVtOyBmb250LWZhbWlseTogJ1JvYm90byc7IGxpbmUtaGVpZ2h0OiAxLjI1cmVtOyB9XG5cbltkYXRhPSdjaGVjay1maWxlJ10gLmZpbGVpbmZvIC5kYXRlIHsgY29sb3I6ICM3NTc1NzU7IH1cblxuW2RhdGE9J2NoZWNrLWZpbGUnXSBpbnB1dCB7IGRpc3BsYXk6IG5vbmU7IH1cblxuW2RhdGE9J2NoZWNrLWZpbGUnXSBsYWJlbCB7IGFsaWduLXNlbGY6IGNlbnRlcjsgdHJhbnNpdGlvbjogLjNzOyBwb3NpdGlvbjogcmVsYXRpdmU7IGJvcmRlci1yYWRpdXM6IDAuMTI1cmVtOyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IDJyZW07IGhlaWdodDogMnJlbTsgYmFja2dyb3VuZDogI2M4YzhjODsgY3Vyc29yOiBwb2ludGVyOyB9XG5cbltkYXRhPSdjaGVjay1maWxlJ10gbGFiZWw6aG92ZXIgeyBiYWNrZ3JvdW5kOiAjNEE5MEUyOyB9XG5cbltkYXRhPSdjaGVjay1maWxlJ10gbGFiZWw6YmVmb3JlLCBbZGF0YT0nY2hlY2stZmlsZSddIGxhYmVsOmFmdGVyIHsgY29udGVudDogXCJcIjsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDUwJTsgbGVmdDogNTAlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgd2lkdGg6IDAuNzVyZW07IGhlaWdodDogMC4xMjVyZW07IGJhY2tncm91bmQ6ICNmZmY7IH1cblxuW2RhdGE9J2NoZWNrLWZpbGUnXSBsYWJlbDphZnRlciB7IHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg5MGRlZyk7IH1cblxuLm0tdGFzay1pdGVtIHsgYm9yZGVyLXJhZGl1czogMC4yNXJlbTsgbWFyZ2luLWJvdHRvbTogMC41cmVtOyBoZWlnaHQ6IDYuMzc1cmVtOyB0cmFuc2l0aW9uOiAuNXM7IH1cblxuLm0tdGFzay1pdGVtLnRvcGljIC5tLXRhc2stbGFiZWwgeyBiYWNrZ3JvdW5kOiAjRkZGMkRDOyB9XG5cbi5tLXRhc2staXRlbS50b3BpYyAubS10YXNrLWxhYmVsIC5lZGl0IC5mYS1zdGFyIHsgY29sb3I6ICNGNUE2MjM7IH1cblxuLm0tdGFzay1pdGVtLmlzLWVkaXQgeyBib3gtc2hhZG93OiAwcHggNHB4IDEwcHggI2M4YzhjODsgbWFyZ2luLWJvdHRvbTogMXJlbTsgaGVpZ2h0OiAyOS44NzVyZW07IH1cblxuLm0tdGFzay1pdGVtLmlzLWVkaXQgLm0tdGFzay1sYWJlbCB7IGJvcmRlci1yYWRpdXM6IDAuMjVyZW0gMC4yNXJlbSAwIDA7IGhlaWdodDogNC43NXJlbTsgfVxuXG4ubS10YXNrLWl0ZW0uaXMtZWRpdCAubS10YXNrLWxhYmVsIC5zdGF0ZSB7IGRpc3BsYXk6IG5vbmU7IH1cblxuLm0tdGFzay1pdGVtLmlzLWVkaXQgLm0tdGFzay1sYWJlbCAuZ3JvdXAsIC5tLXRhc2staXRlbS5pcy1lZGl0IC5tLXRhc2stbGFiZWwgLmluZm8sIC5tLXRhc2staXRlbS5pcy1lZGl0IC5tLXRhc2stbGFiZWwgLmVkaXQgeyBhbGlnbi1zZWxmOiBjZW50ZXI7IH1cblxuLm0tdGFzay1pdGVtLmlzLWVkaXQgLm0tdGFzay1sYWJlbCAuZmEtZWRpdCB7IGNvbG9yOiAjNGE5MGUyOyB9XG5cbi5tLXRhc2staXRlbS5pcy1lZGl0IC5tLXRhc2stZXZlbnQgeyB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpOyB9XG5cbi5tLXRhc2staXRlbS5pcy1kZWwgLm0tdGFzay1sYWJlbCB7IGhlaWdodDogNC43NXJlbTsgfVxuXG4ubS10YXNrLWl0ZW0uaXMtZGVsIC5ncm91cCwgLm0tdGFzay1pdGVtLmlzLWRlbCAuaW5mbywgLm0tdGFzay1pdGVtLmlzLWRlbCAuZWRpdCB7IGFsaWduLXNlbGY6IGNlbnRlcjsgfVxuXG4ubS10YXNrLWl0ZW0uaXMtZGVsIGg0LCAubS10YXNrLWl0ZW0uaXMtZGVsIGlucHV0W3R5cGU9J3RleHQnXSB7IGNvbG9yOiAjOUI5QjlCOyB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDsgfVxuXG4ubS10YXNrLWl0ZW0uaXMtZGVsIC5zdGF0ZSB7IGRpc3BsYXk6IG5vbmU7IH1cblxuLm0tdGFzay1sYWJlbCB7IGJvcmRlci1yYWRpdXM6IDAuMjVyZW07IGhlaWdodDogNi4zNzVyZW07IHBhZGRpbmc6IDEuMjVyZW0gMS44NzVyZW07IGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG4ubS10YXNrLWxhYmVsIC5ncm91cCB7IGZsZXg6IDAgMCBhdHVvOyB3aWR0aDogMi4yNXJlbTsgfVxuXG4ubS10YXNrLWxhYmVsIC5pbmZvIHsgZGlzcGxheTogZmxleDsgZmxleC13cmFwOiB3cmFwOyBhbGlnbi1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyBmbGV4OiAxIDEgMDsgfVxuXG4ubS10YXNrLWxhYmVsIC5pbmZvIGlucHV0W3R5cGU9J3RleHQnXSB7IGJvcmRlcjogMHB4OyBmb250LXNpemU6IDEuNXJlbTsgZm9udC1mYW1pbHk6ICdSb2JvdG8nOyBmb250LXdlaWdodDogNTAwOyBsaW5lLWhlaWdodDogMS4yNXJlbTsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cblxuLm0tdGFzay1sYWJlbCAuaW5mbyBpbnB1dFt0eXBlPSd0ZXh0J106OnBsYWNlaG9sZGVyIHsgY29sb3I6ICMwMDA7IH1cblxuLm0tdGFzay1sYWJlbCAuaW5mbyBoNCB7IHdpZHRoOiAxMDAlOyBmb250LXNpemU6IDEuNXJlbTsgZm9udC1mYW1pbHk6ICdSb2JvdG8nOyBmb250LXdlaWdodDogNTAwOyBsaW5lLWhlaWdodDogMS4yNXJlbTsgfVxuXG4ubS10YXNrLWxhYmVsIC5pbmZvIC5zdGF0ZSA+IHNwYW4geyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGNvbG9yOiAjNzU3NTc1OyBtYXJnaW4tcmlnaHQ6IDFyZW07IH1cblxuLm0tdGFzay1sYWJlbCAuaW5mbyAuc3RhdGUgPiBzcGFuID4gZW0geyBtYXJnaW4tbGVmdDogMC41cmVtOyB9XG5cbi5tLXRhc2stbGFiZWwgLmVkaXQgeyBmbGV4OiAwIDAgYXR1bzsgZm9udC1zaXplOiAxLjVyZW07IH1cblxuLm0tdGFzay1sYWJlbCAuZWRpdCBpIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBtYXJnaW4tbGVmdDogMS4yNXJlbTsgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5tLXRhc2stZXZlbnQgeyBwb3NpdGlvbjogcmVsYXRpdmU7IGJvcmRlci1yYWRpdXM6IDAgMCAwLjI1cmVtIDAuMjVyZW07IGJvcmRlci10b3A6IDAuMTI1cmVtIHNvbGlkICNjOGM4Yzg7IG1heC1oZWlnaHQ6IDA7IHRyYW5zaXRpb246IC41czsgdHJhbnNmb3JtOiBzY2FsZSgxLCAwKTsgdHJhbnNmb3JtLW9yaWdpbjogdG9wOyB9XG5cbi5tLXRhc2stZXZlbnQgLm0tdGFzay1ibG9jayB7IHBhZGRpbmc6IDEuMjVyZW0gNC4zNzVyZW0gMC41cmVtIDQuMzc1cmVtOyBiYWNrZ3JvdW5kOiAjRjJGMkYyOyB9XG5cbi5tLXRhc2stZXZlbnQgLm0tdGFzay1ibG9jayA+IGRpdiB7IG1hcmdpbi1ib3R0b206IDFyZW07IH1cblxuLm0tdGFzay1ldmVudCAudGl0IHsgZm9udC1zaXplOiAxLjI1cmVtOyBmb250LXdlaWdodDogNTAwOyBtYXJnaW4tYm90dG9tOiAwLjVyZW07IH1cblxuLm0tdGFzay1ldmVudCAudGl0IGkgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiAxLjI1cmVtOyBtYXJnaW4tcmlnaHQ6IDAuMzc1cmVtOyB9XG5cbi5tLXRhc2stZXZlbnQgLmNvbnQgeyBwYWRkaW5nLWxlZnQ6IDEuNXJlbTsgfVxuXG4ubS10YXNrLWV2ZW50IHRleHRhcmVhIHsgcmVzaXplOiBub25lOyBmb250LWZhbWlseTogJ1JvYm90byc7IHBhZGRpbmc6IDAuNXJlbSAxcmVtOyBsaW5lLWhlaWdodDogMS41cmVtOyBmb250LXNpemU6IDFyZW07IGJvcmRlcjogMHB4OyB3aWR0aDogMTAwJTsgaGVpZ2h0OiA3LjVyZW07IH1cblxuLm0tdGFzay1ldmVudCAuYnRucyB7IHRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogZmxleDsgfVxuXG4ubS10YXNrLWV2ZW50IC5idG5zIGkgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IG1hcmdpbi1yaWdodDogMC41cmVtOyB9XG5cbi5tLXRhc2stZXZlbnQgLmJ0bnMgYSB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgZGlzcGxheTogYmxvY2s7IHdpZHRoOiA1MCU7IGZvbnQtc2l6ZTogMS41cmVtOyBsaW5lLWhlaWdodDogMy43NXJlbTsgfVxuXG4ubS10YXNrLWV2ZW50IC5idG5zIGEuY2FuY2VsIHsgYm9yZGVyLXJhZGl1czogMCAwIDAgMC4yNXJlbTsgY29sb3I6ICNEMDAyMUI7IGJhY2tncm91bmQ6ICNmZmY7IH1cblxuLm0tdGFzay1ldmVudCAuYnRucyBhLmNhbmNlbDpob3ZlciB7IGJhY2tncm91bmQ6ICNmZGZkZmQ7IH1cblxuLm0tdGFzay1ldmVudCAuYnRucyBhLnNhdmUgeyBib3JkZXItcmFkaXVzOiAwIDAgMC4yNXJlbSAwOyBjb2xvcjogI2ZmZjsgYmFja2dyb3VuZDogIzRBOTBFMjsgfVxuXG4ubS10YXNrLWV2ZW50IC5idG5zIGEuc2F2ZTpob3ZlciB7IGJhY2tncm91bmQ6ICMzOTgyZDc7IH1cblxuLnRvdGFsIHsgcGFkZGluZy1sZWZ0OiAxLjg3NXJlbTsgZm9udC1zaXplOiAxLjVyZW07IGNvbG9yOiAjYzhjOGM4OyBmb250LXN0eWxlOiBpdGFsaWM7IH1cbiIsIkBpbXBvcnQgJ2xheW91dCc7XHJcbkBpbXBvcnQgJ2NoZWNrYm94JztcclxuXHJcblxyXG5uYXZ7XHJcbiAgaGVpZ2h0OiByZW0oNzZweCk7XHJcbiAgbGluZS1oZWlnaHQ6IHJlbSg3NnB4KTtcclxuICBiYWNrZ3JvdW5kOiAjNEE5MEUyO1xyXG4gIHVse1xyXG4gICAgQGluY2x1ZGUgbWF4V2lkdGgoNjIwcHgpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgID5saXtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB3aWR0aDpyZW0oMTYwcHgpO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDI0cHgpO1xyXG4gICAgICBmb250LWZhbWlseTogJ1JvYm90byc7XHJcbiAgICAgIGF7XHJcbiAgICAgICAgY29sb3I6ICMwMDQwOEI7XHJcbiAgICAgIH1cclxuICAgICAgJi5pcy1hY3RpdmUgYSwmOmhvdmVyIGF7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgbGVmdDowO1xyXG4gICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICBoZWlnaHQ6IHJlbSg1cHgpO1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogIzAwNDA4QjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jb250ZW50e1xyXG4gIG1hcmdpbi10b3A6IHJlbSgyNHB4KTtcclxuICBtYXJnaW4tYm90dG9tOiByZW0oNDhweCk7XHJcbiAgKnsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxyXG4gIEBpbmNsdWRlIG1heFdpZHRoKDYyMHB4KTtcclxuICBcclxufVxyXG5cclxuXHJcbltkYXRhPSdjaGVja2JveC1jaGVjaydde1xyXG4gIEBpbmNsdWRlIGNoZWNrYm94KCAyNHB4LCM0QTkwRTIgKTtcclxuICAuaXMtZGVsICZ7XHJcbiAgICBsaW5lLWhlaWdodDogMC42cmVtO1xyXG4gIH1cclxufVxyXG5cclxuLm0tYWRkdGFza3tcclxuICB0cmFuc2l0aW9uOiAuNXM7XHJcbiAgJi5pcy1hY3RpdmV7XHJcbiAgICBoZWlnaHQ6IHJlbSg1MDBweCk7XHJcbiAgICAuYWRkaW5uZXJ7XHJcbiAgICAgIG1heC1oZWlnaHQ6IHJlbSg1MDBweCk7XHJcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSwxKTtcclxuICAgIH0gIFxyXG4gIH1cclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWFyZ2luLWJvdHRvbTogcmVtKDI0cHgpO1xyXG4gIGhlaWdodDogcmVtKDY0cHgpO1xyXG4gIC5hZGR7XHJcbiAgICBwYWRkaW5nOiAwIHJlbSgzMHB4KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IHJlbSg0cHgpO1xyXG4gICAgaGVpZ2h0OiByZW0oNjRweCk7XHJcbiAgICBsaW5lLWhlaWdodDogcmVtKDY0cHgpO1xyXG4gICAgZm9udC1zaXplOiByZW0oMjRweCk7XHJcbiAgICBib3JkZXI6IHJlbSgycHgpIHNvbGlkICNDOEM4Qzg7XHJcbiAgICBjb2xvcjogI0M4QzhDODtcclxuICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgfVxyXG4gIC5hZGRpbm5lcntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC1oZWlnaHQ6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEsMCk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuW2RhdGE9J2NoZWNrLWZpbGUnXXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIC5maWxlaW5mb3tcclxuICAgIG1hcmdpbi1yaWdodDogcmVtKDI0cHgpO1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xyXG4gICAgbGluZS1oZWlnaHQ6IHJlbSgyMHB4KTtcclxuICAgIC5kYXRle1xyXG4gICAgICBjb2xvcjogIzc1NzU3NTtcclxuICAgIH1cclxuICB9XHJcbiAgaW5wdXR7IFxyXG4gICAgZGlzcGxheTogbm9uZTsgXHJcbiAgfVxyXG4gIGxhYmVse1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgJjpob3ZlcntcclxuICAgICAgYmFja2dyb3VuZDogIzRBOTBFMjsgXHJcbiAgICB9XHJcbiAgICB0cmFuc2l0aW9uOiAuM3M7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiByZW0oMnB4KTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IHJlbSgzMnB4KTtcclxuICAgIGhlaWdodDogcmVtKDMycHgpO1xyXG4gICAgYmFja2dyb3VuZDogI2M4YzhjODtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICY6YmVmb3JlLCY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6XCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgd2lkdGg6IHJlbSgxMnB4KTtcclxuICAgICAgaGVpZ2h0OiByZW0oMnB4KTtcclxuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIH1cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg5MGRlZyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ubS10YXNrLWl0ZW17XHJcbiAgYm9yZGVyLXJhZGl1czogcmVtKDRweCk7XHJcbiAgbWFyZ2luLWJvdHRvbTogcmVtKDhweCk7XHJcbiAgaGVpZ2h0OiByZW0oMTAycHgpO1xyXG4gIHRyYW5zaXRpb246IC41cztcclxuICAmLnRvcGlje1xyXG4gICAgLm0tdGFzay1sYWJlbHtcclxuICAgICAgYmFja2dyb3VuZDogI0ZGRjJEQztcclxuICAgICAgLmVkaXR7ICBcclxuICAgICAgICAuZmEtc3RhcntcclxuICAgICAgICAgIGNvbG9yOiAjRjVBNjIzO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAmLmlzLWVkaXR7XHJcbiAgICBib3gtc2hhZG93OiAwcHggNHB4IDEwcHggI2M4YzhjODtcclxuICAgIG1hcmdpbi1ib3R0b206IHJlbSgxNnB4KTtcclxuICAgIGhlaWdodDogcmVtKDQ3OHB4KTtcclxuICAgIC5tLXRhc2stbGFiZWx7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IHJlbSg0cHgpIHJlbSg0cHgpIDAgMDtcclxuICAgICAgaGVpZ2h0OiByZW0oNzZweCk7XHJcbiAgICAgIC5zdGF0ZXsgZGlzcGxheTogbm9uZTsgfVxyXG4gICAgICAuZ3JvdXAsLmluZm8sLmVkaXR7XHJcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICAgIC5mYS1lZGl0e1xyXG4gICAgICAgIGNvbG9yOiAjNGE5MGUyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAubS10YXNrLWV2ZW50eyAgXHJcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSwxKTtcclxuICAgIH1cclxuICB9XHJcbiAgJi5pcy1kZWx7XHJcbiAgICAubS10YXNrLWxhYmVse1xyXG4gICAgICBoZWlnaHQ6IHJlbSg3NnB4KTtcclxuICAgIH1cclxuICAgIC5ncm91cCwuaW5mbywuZWRpdHtcclxuICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgaDQsaW5wdXRbdHlwZT0ndGV4dCdde1xyXG4gICAgICBjb2xvcjogIzlCOUI5QjtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOmxpbmUtdGhyb3VnaDtcclxuICAgIH1cclxuICAgIC5zdGF0ZXsgZGlzcGxheTogbm9uZTsgfVxyXG4gIH1cclxufVxyXG5cclxuXHJcbi5tLXRhc2stbGFiZWx7XHJcbiAgYm9yZGVyLXJhZGl1czogcmVtKDRweCk7XHJcbiAgaGVpZ2h0OiByZW0oMTAycHgpO1xyXG4gIHBhZGRpbmc6IHJlbSgyMHB4KSByZW0oMzBweCk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBcclxuICAuZ3JvdXB7XHJcbiAgICBmbGV4OiAwIDAgYXR1bztcclxuICAgIC8vIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgIHdpZHRoOiByZW0oMzZweCk7XHJcbiAgfVxyXG4gIC5pbmZve1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC8vIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBmbGV4OiAxIDEgMDtcclxuICAgIGlucHV0W3R5cGU9J3RleHQnXXtcclxuICAgICAgJjo6cGxhY2Vob2xkZXJ7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgIH1cclxuICAgICAgYm9yZGVyOjBweDtcclxuICAgICAgZm9udC1zaXplOiByZW0oMjRweCk7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcclxuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgbGluZS1oZWlnaHQ6IHJlbSgyMHB4KTtcclxuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcbiAgICBoNHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDI0cHgpO1xyXG4gICAgICBmb250LWZhbWlseTogJ1JvYm90byc7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiByZW0oMjBweCk7XHJcbiAgICB9XHJcbiAgICAuc3RhdGV7XHJcbiAgICAgID4gc3BhbntcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgY29sb3I6Izc1NzU3NTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgxNnB4KTtcclxuICAgICAgICA+ZW17XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogcmVtKDhweCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5lZGl0e1xyXG4gICAgZmxleDogMCAwIGF0dW87XHJcbiAgICBmb250LXNpemU6IHJlbSgyNHB4KTtcclxuICAgIGl7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgbWFyZ2luLWxlZnQ6IHJlbSgyMHB4KTtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxufVxyXG5cclxuLm0tdGFzay1ldmVudHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYm9yZGVyLXJhZGl1czogMCAwIHJlbSg0cHgpIHJlbSg0cHgpO1xyXG4gIGJvcmRlci10b3A6IHJlbSgycHgpIHNvbGlkICNjOGM4Yzg7XHJcbiAgbWF4LWhlaWdodDogMDtcclxuICB0cmFuc2l0aW9uOiAuNXM7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLDApO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAubS10YXNrLWJsb2Nre1xyXG4gICAgcGFkZGluZzogcmVtKDIwcHgpIHJlbSg3MHB4KSByZW0oOHB4KSByZW0oNzBweCk7XHJcbiAgICBiYWNrZ3JvdW5kOiAjRjJGMkYyOyAgXHJcbiAgICA+ZGl2e1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiByZW0oMTZweCk7O1xyXG4gICAgfVxyXG4gIH1cclxuICAudGl0eyBcclxuICAgIGZvbnQtc2l6ZTogcmVtKDIwcHgpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IHJlbSg4cHgpO1xyXG4gICAgaXtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB3aWR0aDogcmVtKDIwcHgpO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IHJlbSg2cHgpO1xyXG4gICAgfVxyXG4gIH1cclxuICAuY29udHtcclxuICAgIHBhZGRpbmctbGVmdDogcmVtKDI0cHgpO1xyXG4gIH1cclxuICB0ZXh0YXJlYXtcclxuICAgIHJlc2l6ZTogbm9uZTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcclxuICAgIHBhZGRpbmc6IHJlbSg4cHgpIHJlbSgxNnB4KTtcclxuICAgIGxpbmUtaGVpZ2h0OiByZW0oMjRweCk7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNnB4KTtcclxuICAgIGJvcmRlcjogMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IHJlbSgxMjBweCk7XHJcbiAgfVxyXG4gIC5idG5ze1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIFxyXG4gICAgaXtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IHJlbSg4cHgpO1xyXG4gICAgfVxyXG4gICAgYXsgXHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDI0cHgpO1xyXG4gICAgICBsaW5lLWhlaWdodDogcmVtKDYwcHgpO1xyXG4gICAgICAmLmNhbmNlbHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDAgMCByZW0oNHB4KTtcclxuICAgICAgICBjb2xvcjogI0QwMDIxQjtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmRmZGZkO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLnNhdmV7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMCAwIHJlbSg0cHgpIDA7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgYmFja2dyb3VuZDogIzRBOTBFMjtcclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogIzM5ODJkNztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4udG90YWx7XHJcbiAgcGFkZGluZy1sZWZ0OiByZW0oMzBweCk7XHJcbiAgZm9udC1zaXplOiByZW0oMjRweCk7XHJcbiAgY29sb3I6ICNjOGM4Yzg7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59IiwiJWNsZWFyIHtcclxuICAmOmFmdGVyLCAmOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogdGFibGU7XHJcbiAgfVxyXG4gICY6YWZ0ZXJ7XHJcbiAgICBjbGVhcjpib3RoO1xyXG4gIH1cclxuICAqem9vbToxO1xyXG59XHJcblxyXG4vL3B4IHRvIHJlbVxyXG5AZnVuY3Rpb24gcmVtKCR0YXJnZXQsICRjb250ZXh0OiAxNnB4KXtcclxuICBAaWYgJHRhcmdldCA9PSAwIHsgQHJldHVybiAwIH1cclxuICBAcmV0dXJuICgkdGFyZ2V0IC8gJGNvbnRleHQpKyAwcmVtO1xyXG59XHJcblxyXG4vLyBweCB0byAlXHJcbkBmdW5jdGlvbiBwZXJjZW50KCR0YXJnZXQsICRjb250YWluZXI6IDk2MCl7XHJcbiAgQGlmICR0YXJnZXQgPT0gMCB7IEByZXR1cm4gMCB9XHJcbiAgQHJldHVybiAoJHRhcmdldCAvICRjb250YWluZXIqMTAwKSsgMCU7XHJcbn1cclxuXHJcblxyXG4iLCJcclxuLy8g5pyA5aSn5a+sXHJcbkBtaXhpbiBtYXhXaWR0aCggJHdpZHRoLCAkc3BhY2U6IDApe1xyXG4gIHBhZGRpbmc6IDAgcmVtKCAkc3BhY2UgKTtcclxuICBtYXgtd2lkdGg6IHJlbSggJHdpZHRoICsgKCRzcGFjZSoyKSApO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bzsgXHJcbn1cclxuXHJcbi8vIGdyaWRcclxuQGZ1bmN0aW9uIHNwYW4oICRncmlkLCAkY29sdW1uLCAkZ3V0dGVyOiAwICl7XHJcbiAgQHJldHVybiAoIDEwMCAvICRncmlkICkgKiAkY29sdW1uICsgMCUgO1xyXG59XHJcblxyXG5AbWl4aW4gc3BhbiggJGdyaWQsICRjb2x1bW4sICRndXR0ZXI6IDAgLCRudGg6IG5vbmUpe1xyXG4gIHdpZHRoOiBzcGFuKCAkZ3JpZCwgJGNvbHVtbik7XHJcbiAgcGFkZGluZzogMCByZW0oJGd1dHRlcikgLyAyO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblxyXG4gIEBpZiAkbnRoID09IGZpcnN0e1xyXG4gICAgbWFyZ2luLWxlZnQ6IHJlbSgtJGd1dHRlcikgLyAyO1xyXG4gIH1AZWxzZSBpZiAkbnRoID09IGxhc3R7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IHJlbSgtJGd1dHRlcikgLyAyO1xyXG4gIH1AZWxzZSBpZiAkbnRoID09IG5vbmV7XHJcbiAgICBtYXJnaW4tbGVmdCA6YXV0bztcclxuICAgIG1hcmdpbi1yaWdodCA6YXV0bztcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiB0cmlhbmdsZSAoJHNpemUsICRjb2xvciwgJGRpcmVjdGlvbikge1xyXG4gIHdpZHRoOjA7XHJcbiAgaGVpZ2h0OjA7XHJcbiAgYm9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1zdHlsZTpzb2xpZDtcclxuICAgIEBpZiAkZGlyZWN0aW9uID09IHRvcHsgICAgICAgICAgICAgIC8v5LiKXHJcbiAgICAgICAgYm9yZGVyLXdpZHRoOjBweCAkc2l6ZS8yICRzaXplLzIgJHNpemUvMjtcclxuICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiRjb2xvcjtcclxuICAgIH1AZWxzZSBpZiAkZGlyZWN0aW9uID09IGJvdHRvbXsgICAgIC8v5LiLXHJcbiAgICAgICAgYm9yZGVyLXdpZHRoOiRzaXplLzIgJHNpemUvMiAwcHggJHNpemUvMiA7XHJcbiAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjokY29sb3I7XHJcbiAgICB9QGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBsZWZ0eyAgICAgICAvL+W3plxyXG4gICAgICAgIGJvcmRlci13aWR0aDokc2l6ZS8yICRzaXplLzIgJHNpemUvMiAwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiRjb2xvcjtcclxuICAgIH1AZWxzZSBpZiAkZGlyZWN0aW9uID09IHJpZ2h0eyAgICAgIC8v5Y+zXHJcbiAgICAgICAgYm9yZGVyLXdpZHRoOiRzaXplLzIgMHB4ICRzaXplLzIgJHNpemUvMjtcclxuICAgICAgICBib3JkZXItbGVmdC1jb2xvcjokY29sb3I7XHJcbiAgICB9QGVsc2UgaWYgJGRpcmVjdGlvbiA9PSB0b3BfbGVmdHsgICAvL+W3puS4ilxyXG4gICAgICAgIGJvcmRlci13aWR0aDokc2l6ZSAkc2l6ZSAkc2l6ZSAwcHg7XHJcbiAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjokY29sb3I7XHJcbiAgICB9QGVsc2UgaWYgJGRpcmVjdGlvbiA9PSB0b3BfcmlnaHR7ICAvL+WPs+S4ilxyXG4gICAgICAgIGJvcmRlci13aWR0aDokc2l6ZSAwcHggJHNpemUgJHNpemU7XHJcbiAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjokY29sb3I7XHJcbiAgICB9QGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBib3R0b21fbGVmdHsgICAgLy/lt6bkuItcclxuICAgICAgICBib3JkZXItd2lkdGg6JHNpemUgJHNpemUgJHNpemUgMHB4O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6JGNvbG9yO1xyXG4gICAgfUBlbHNlIGlmICRkaXJlY3Rpb24gPT0gYm90dG9tX3JpZ2h0eyAgIC8v5Y+z5LiLXHJcbiAgICAgICAgYm9yZGVyLXdpZHRoOiRzaXplIDBweCAkc2l6ZSAkc2l6ZTtcclxuICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiRjb2xvcjtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vIGFuaW1hdGlvblxyXG5AbWl4aW4gYW5pbWF0aW9uKCRhbmltYXRpb24uLi4pIHtcclxuICAtby1hbmltYXRpb246ICRhbmltYXRpb247XHJcbiAgLW1vei1hbmltYXRpb246ICRhbmltYXRpb247XHJcbiAgLXdlYmtpdC1hbmltYXRpb246ICRhbmltYXRpb247XHJcbiAgYW5pbWF0aW9uOiAkYW5pbWF0aW9uO1xyXG59XHJcbi8vIOWLleeVq+WLleS9nFxyXG4vLyBAa2V5ZnJhbWVzIHNwaW4ge1xyXG4vLyAgIFx0MCV7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IHRyYW5mb3JtOiByb3RhdGUoMGRlZyk7fVxyXG4vLyBcdDEwMCV7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgdHJhbmZvcm06IHJvdGF0ZSgzNjBkZWcpO31cclxuLy8gfVxyXG4vLyBAaW5jbHVkZSBhbmltYXRpb24oc3BpbiAxcyBsaW5lYXIgaW5maW5pdGUpO1xyXG5cclxuXHJcbiIsIlxyXG5AbWl4aW4gY2hlY2tib3goICRzaXplLCAkY29sb3IgKXtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGxpbmUtaGVpZ2h0OiByZW0oJHNpemUpO1xyXG4gIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgICAmfmxhYmVsIHtcclxuICAgICAgcGFkZGluZy1sZWZ0OiByZW0oJHNpemUpO1xyXG4gICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgdG9wOiByZW0oICRzaXplLzQgKTtcclxuICAgICAgICBsZWZ0OiByZW0oICRzaXplLzQgICk7XHJcbiAgICAgICAgd2lkdGg6IHJlbSggJHNpemUvMiApO1xyXG4gICAgICAgIGhlaWdodDogcmVtKCAkc2l6ZS80ICk7XHJcbiAgICAgICAgYm9yZGVyOiByZW0oMnB4KSBzb2xpZCAjMTkxOTE5O1xyXG4gICAgICAgIGJvcmRlci10b3Atc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC40cyBjdWJpYy1iZXppZXIoLjQ1LCAxLjgsIC41LCAuNzUpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGUoMCwgMCk7XHJcbiAgICAgIH1cclxuICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICAgIHdpZHRoOiByZW0oJHNpemUpO1xyXG4gICAgICAgIGhlaWdodDogcmVtKCRzaXplKTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJjpjaGVja2VkfmxhYmVsIHtcclxuICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGUoMSwgMSk7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xyXG4gICAgICB9XHJcbiAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIC8vIGJhY2tncm91bmQ6ICM0QTkwRTI7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */
